# Generated by Django 5.2 on 2025-06-04 03:24

import django.core.validators
import django.db.models.deletion
from decimal import Decimal
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='ActividadEconomica',
            fields=[
                ('codigo', models.CharField(max_length=6, primary_key=True, serialize=False)),
                ('texto', models.CharField(max_length=150)),
            ],
            options={
                'verbose_name': 'Actividad Económica',
                'verbose_name_plural': 'Actividades Económicas',
                'db_table': 'cat_actividad_economica',
                'ordering': ['codigo'],
            },
        ),
        migrations.CreateModel(
            name='AmbienteDestino',
            fields=[
                ('codigo', models.CharField(max_length=4, primary_key=True, serialize=False)),
                ('texto', models.CharField(max_length=150)),
            ],
            options={
                'verbose_name': 'Ambiente de Destino',
                'verbose_name_plural': 'Ambientes de Destino',
                'db_table': 'cat_ambiente_destino',
            },
        ),
        migrations.CreateModel(
            name='CondicionOperacion',
            fields=[
                ('codigo', models.CharField(max_length=4, primary_key=True, serialize=False)),
                ('texto', models.CharField(max_length=150)),
            ],
            options={
                'verbose_name': 'Condición de Operación',
                'verbose_name_plural': 'Condiciones de Operación',
                'db_table': 'cat_condicion_operacion',
            },
        ),
        migrations.CreateModel(
            name='Departamento',
            fields=[
                ('codigo', models.CharField(max_length=4, primary_key=True, serialize=False)),
                ('texto', models.CharField(max_length=150)),
            ],
            options={
                'verbose_name': 'Departamento',
                'verbose_name_plural': 'Departamentos',
                'db_table': 'cat_departamento',
            },
        ),
        migrations.CreateModel(
            name='DocumentoContingencia',
            fields=[
                ('codigo', models.CharField(max_length=4, primary_key=True, serialize=False)),
                ('texto', models.CharField(max_length=150)),
            ],
            options={
                'verbose_name': 'Documento de Contingencia',
                'verbose_name_plural': 'Documentos de Contingencia',
                'db_table': 'cat_documento_contingencia',
            },
        ),
        migrations.CreateModel(
            name='FormaPago',
            fields=[
                ('codigo', models.CharField(max_length=4, primary_key=True, serialize=False)),
                ('texto', models.CharField(max_length=150)),
            ],
            options={
                'verbose_name': 'Forma de Pago',
                'verbose_name_plural': 'Formas de Pago',
                'db_table': 'cat_forma_pago',
            },
        ),
        migrations.CreateModel(
            name='GeneracionDocumento',
            fields=[
                ('codigo', models.CharField(max_length=4, primary_key=True, serialize=False)),
                ('texto', models.CharField(max_length=150)),
            ],
            options={
                'verbose_name': 'Generación de Documento',
                'verbose_name_plural': 'Generaciones de Documento',
                'db_table': 'cat_generacion_documento',
            },
        ),
        migrations.CreateModel(
            name='ModeloFacturacion',
            fields=[
                ('codigo', models.CharField(max_length=4, primary_key=True, serialize=False)),
                ('texto', models.CharField(max_length=150)),
            ],
            options={
                'verbose_name': 'Modelo de Facturación',
                'verbose_name_plural': 'Modelos de Facturación',
                'db_table': 'cat_modelo_facturacion',
            },
        ),
        migrations.CreateModel(
            name='OtroDocumentoAsociado',
            fields=[
                ('codigo', models.CharField(max_length=4, primary_key=True, serialize=False)),
                ('texto', models.CharField(max_length=150)),
            ],
            options={
                'verbose_name': 'Otro Documento Asociado',
                'verbose_name_plural': 'Otros Documentos Asociados',
                'db_table': 'cat_otro_documento_asociado',
            },
        ),
        migrations.CreateModel(
            name='Pais',
            fields=[
                ('codigo', models.CharField(max_length=4, primary_key=True, serialize=False)),
                ('texto', models.CharField(max_length=150)),
            ],
            options={
                'verbose_name': 'País',
                'verbose_name_plural': 'Paises',
                'db_table': 'cat_pais',
            },
        ),
        migrations.CreateModel(
            name='Plazo',
            fields=[
                ('codigo', models.CharField(max_length=4, primary_key=True, serialize=False)),
                ('texto', models.CharField(max_length=150)),
            ],
            options={
                'verbose_name': 'Plazo',
                'verbose_name_plural': 'Plazos',
                'db_table': 'cat_plazo',
            },
        ),
        migrations.CreateModel(
            name='TipoContingencia',
            fields=[
                ('codigo', models.CharField(max_length=4, primary_key=True, serialize=False)),
                ('texto', models.CharField(max_length=150)),
            ],
            options={
                'verbose_name': 'Tipo de Contingencia',
                'verbose_name_plural': 'Tipos de Contingencia',
                'db_table': 'cat_tipo_contingencia',
            },
        ),
        migrations.CreateModel(
            name='TipoDocReceptor',
            fields=[
                ('codigo', models.CharField(max_length=4, primary_key=True, serialize=False)),
                ('texto', models.CharField(max_length=150)),
            ],
            options={
                'verbose_name': 'Tipo de Documento Receptor',
                'verbose_name_plural': 'Tipos de Documento Receptor',
                'db_table': 'cat_tipo_doc_receptor',
            },
        ),
        migrations.CreateModel(
            name='TipoDocumento',
            fields=[
                ('codigo', models.CharField(max_length=4, primary_key=True, serialize=False)),
                ('texto', models.CharField(max_length=150)),
            ],
            options={
                'verbose_name': 'Tipo de Documento',
                'verbose_name_plural': 'Tipos de Documento',
                'db_table': 'cat_tipo_documento',
            },
        ),
        migrations.CreateModel(
            name='TipoEstablecimiento',
            fields=[
                ('codigo', models.CharField(max_length=4, primary_key=True, serialize=False)),
                ('texto', models.CharField(max_length=150)),
            ],
            options={
                'verbose_name': 'Tipo de Establecimiento',
                'verbose_name_plural': 'Tipos de Establecimiento',
                'db_table': 'cat_tipo_establecimiento',
            },
        ),
        migrations.CreateModel(
            name='TipoInvalidacion',
            fields=[
                ('codigo', models.CharField(max_length=4, primary_key=True, serialize=False)),
                ('texto', models.CharField(max_length=150)),
            ],
            options={
                'verbose_name': 'Tipo de Invalidación',
                'verbose_name_plural': 'Tipos de Invalidación',
                'db_table': 'cat_tipo_invalidacion',
            },
        ),
        migrations.CreateModel(
            name='TipoItem',
            fields=[
                ('codigo', models.CharField(max_length=4, primary_key=True, serialize=False)),
                ('texto', models.CharField(max_length=150)),
            ],
            options={
                'verbose_name': 'Tipo de Ítem',
                'verbose_name_plural': 'Tipos de Ítem',
                'db_table': 'cat_tipo_item',
            },
        ),
        migrations.CreateModel(
            name='TipoServicio',
            fields=[
                ('codigo', models.CharField(max_length=4, primary_key=True, serialize=False)),
                ('texto', models.CharField(max_length=150)),
            ],
            options={
                'verbose_name': 'Tipo de Servicio',
                'verbose_name_plural': 'Tipos de Servicio',
                'db_table': 'cat_tipo_servicio',
            },
        ),
        migrations.CreateModel(
            name='TipoTransmision',
            fields=[
                ('codigo', models.CharField(max_length=4, primary_key=True, serialize=False)),
                ('texto', models.CharField(max_length=150)),
            ],
            options={
                'verbose_name': 'Tipo de Transmisión',
                'verbose_name_plural': 'Tipos de Transmisión',
                'db_table': 'cat_tipo_transmision',
            },
        ),
        migrations.CreateModel(
            name='Tributo',
            fields=[
                ('codigo', models.CharField(max_length=2, primary_key=True, serialize=False)),
                ('texto', models.CharField(max_length=150)),
            ],
            options={
                'verbose_name': 'Tributo',
                'verbose_name_plural': 'Tributos',
                'db_table': 'cat_tributo',
                'ordering': ['codigo'],
            },
        ),
        migrations.CreateModel(
            name='UnidadMedida',
            fields=[
                ('codigo', models.CharField(max_length=4, primary_key=True, serialize=False)),
                ('texto', models.CharField(max_length=150)),
            ],
            options={
                'verbose_name': 'Unidad de Medida',
                'verbose_name_plural': 'Unidades de Medida',
                'db_table': 'cat_unidad_medida',
            },
        ),
        migrations.CreateModel(
            name='Emisor',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nit', models.CharField(max_length=14, validators=[django.core.validators.RegexValidator(message='NIT debe tener 9 o 14 dígitos.', regex='^(\\d{9}|\\d{14})$')])),
                ('nrc', models.CharField(max_length=8, validators=[django.core.validators.RegexValidator(message='NRC debe tener entre 2 y 8 dígitos.', regex='^\\d{2,8}$')])),
                ('nombre', models.CharField(max_length=250)),
                ('descActividad', models.CharField(max_length=150)),
                ('nombreComercial', models.CharField(blank=True, max_length=150, null=True)),
                ('complemento', models.CharField(max_length=200)),
                ('telefono', models.CharField(max_length=30, validators=[django.core.validators.RegexValidator(message='Teléfono inválido.', regex='^\\+?[\\d\\s\\-]{8,30}$')])),
                ('correo', models.EmailField(max_length=100, validators=[django.core.validators.EmailValidator(message='Correo inválido.')])),
                ('codEstableMH', models.CharField(blank=True, max_length=4, null=True)),
                ('codEstable', models.CharField(blank=True, max_length=4, null=True)),
                ('codPuntoVentaMH', models.CharField(blank=True, max_length=4, null=True)),
                ('codPuntoVenta', models.CharField(blank=True, max_length=15, null=True)),
                ('codActividad', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='dte.actividadeconomica', verbose_name='Código de Actividad Económica')),
                ('departamento', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='dte.departamento')),
            ],
            options={
                'verbose_name': 'Emisor',
                'verbose_name_plural': 'Emisores',
                'db_table': 'dte_emisor',
            },
        ),
        migrations.CreateModel(
            name='FacturaElectronica',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('emisor', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='+', to='dte.emisor')),
            ],
            options={
                'verbose_name': 'Factura Electrónica',
                'verbose_name_plural': 'Facturas Electrónicas',
                'db_table': 'dte_factura_electronica',
            },
        ),
        migrations.CreateModel(
            name='Extension',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombEntrega', models.CharField(blank=True, max_length=100, null=True)),
                ('docuEntrega', models.CharField(blank=True, max_length=25, null=True)),
                ('nombRecibe', models.CharField(blank=True, max_length=100, null=True)),
                ('docuRecibe', models.CharField(blank=True, max_length=25, null=True)),
                ('observaciones', models.TextField(blank=True, max_length=3000, null=True)),
                ('placaVehiculo', models.CharField(blank=True, max_length=10, null=True)),
                ('factura', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='extension', to='dte.facturaelectronica')),
            ],
            options={
                'verbose_name': 'Extensión',
                'verbose_name_plural': 'Extensiones',
                'db_table': 'dte_extension',
            },
        ),
        migrations.CreateModel(
            name='ApendiceItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('campo', models.CharField(max_length=25)),
                ('etiqueta', models.CharField(max_length=50)),
                ('valor', models.CharField(max_length=150)),
                ('factura', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='apendice', to='dte.facturaelectronica')),
            ],
            options={
                'verbose_name': 'Apéndice Ítem',
                'verbose_name_plural': 'Apéndice Ítems',
                'db_table': 'dte_apendice_item',
            },
        ),
        migrations.CreateModel(
            name='Identificacion',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('version', models.IntegerField(default=1)),
                ('numeroControl', models.CharField(help_text='Formato: DTE-01-XXXXXXXX-XXXXXXXXXXXXXXX', max_length=31, unique=True, validators=[django.core.validators.RegexValidator(message='Debe tener formato DTE-01-XXXXXXXX-XXXXXXXXXXXXXXX', regex='^DTE-01-[A-Z0-9]{8}-[0-9]{15}$')])),
                ('codigoGeneracion', models.CharField(help_text='UUID: XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX', max_length=36, validators=[django.core.validators.RegexValidator(message='Debe ser un UUID en mayúsculas (ej. 1234ABCD-1234-1234-1234-1234567890AB)', regex='^[A-F0-9]{8}-[A-F0-9]{4}-[A-F0-9]{4}-[A-F0-9]{4}-[A-F0-9]{12}$')])),
                ('motivoContin', models.CharField(blank=True, help_text='Motivo de Contingencia', max_length=150, null=True)),
                ('fecEmi', models.DateField(verbose_name='Fecha de Emisión')),
                ('horEmi', models.TimeField(validators=[django.core.validators.RegexValidator(message='Debe tener formato HH:MM:SS (24 horas).', regex='^(0[0-9]|1[0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]$')], verbose_name='Hora de Emisión')),
                ('tipoMoneda', models.CharField(default='USD', help_text='Tipo de Moneda', max_length=3)),
                ('ambiente', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='dte.ambientedestino', verbose_name='Ambiente de Destino')),
                ('tipoModelo', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='dte.modelofacturacion', verbose_name='Modelo de Facturación')),
                ('tipoContingencia', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='dte.tipocontingencia', verbose_name='Tipo de Contingencia')),
                ('tipoDte', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='dte.tipodocumento', verbose_name='Tipo de Documento')),
                ('tipoOperacion', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='dte.tipotransmision', verbose_name='Tipo de Transmisión')),
            ],
            options={
                'verbose_name': 'Identificación',
                'verbose_name_plural': 'Identificaciones',
                'db_table': 'dte_identificacion',
            },
        ),
        migrations.AddField(
            model_name='facturaelectronica',
            name='identificacion',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='+', to='dte.identificacion'),
        ),
        migrations.CreateModel(
            name='Municipio',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('codigo', models.CharField(max_length=4)),
                ('texto', models.CharField(max_length=150)),
                ('departamento', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='municipios', to='dte.departamento')),
            ],
            options={
                'verbose_name': 'Municipio',
                'verbose_name_plural': 'Municipios',
                'db_table': 'cat_municipio',
            },
        ),
        migrations.AddField(
            model_name='emisor',
            name='municipio',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='dte.municipio'),
        ),
        migrations.CreateModel(
            name='Receptor',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('numDocumento', models.CharField(blank=True, help_text='Si tipoDocumento=36 debe tener 9 o 14 dígitos; si tipoDocumento=13, patrón XXXXXXXX-X', max_length=20, null=True)),
                ('nrc', models.CharField(blank=True, max_length=8, null=True, validators=[django.core.validators.RegexValidator(message='NRC debe tener entre 2 y 8 dígitos.', regex='^\\d{2,8}$')])),
                ('nombre', models.CharField(blank=True, max_length=250, null=True)),
                ('descActividad', models.CharField(blank=True, max_length=150, null=True)),
                ('complemento', models.CharField(blank=True, max_length=200, null=True)),
                ('telefono', models.CharField(blank=True, max_length=30, null=True, validators=[django.core.validators.RegexValidator(message='Teléfono inválido.', regex='^\\+?[\\d\\s\\-]{8,30}$')])),
                ('correo', models.EmailField(blank=True, max_length=100, null=True, validators=[django.core.validators.EmailValidator(message='Correo inválido.')])),
                ('codActividad', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='dte.actividadeconomica', verbose_name='Código de Actividad Económica Receptor')),
                ('departamento', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='dte.departamento')),
                ('municipio', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='dte.municipio')),
                ('tipoDocumento', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='dte.tipodocreceptor', verbose_name='Tipo de Documento Receptor')),
            ],
            options={
                'verbose_name': 'Receptor',
                'verbose_name_plural': 'Receptores',
                'db_table': 'dte_receptor',
            },
        ),
        migrations.AddField(
            model_name='facturaelectronica',
            name='receptor',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='+', to='dte.receptor'),
        ),
        migrations.CreateModel(
            name='Resumen',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('totalNoSuj', models.DecimalField(decimal_places=2, max_digits=20, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))])),
                ('totalExenta', models.DecimalField(decimal_places=2, max_digits=20, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))])),
                ('totalGravada', models.DecimalField(decimal_places=2, max_digits=20, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))])),
                ('subTotalVentas', models.DecimalField(decimal_places=2, max_digits=20, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))])),
                ('descuNoSuj', models.DecimalField(decimal_places=2, max_digits=20, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))])),
                ('descuExenta', models.DecimalField(decimal_places=2, max_digits=20, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))])),
                ('descuGravada', models.DecimalField(decimal_places=2, max_digits=20, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))])),
                ('porcentajeDescuento', models.DecimalField(decimal_places=2, max_digits=5, validators=[django.core.validators.MinValueValidator(Decimal('0.00')), django.core.validators.MaxValueValidator(Decimal('100.00'))])),
                ('totalDescu', models.DecimalField(decimal_places=2, max_digits=20, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))])),
                ('subTotal', models.DecimalField(decimal_places=2, max_digits=20, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))])),
                ('ivaRete1', models.DecimalField(decimal_places=2, max_digits=20, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))])),
                ('reteRenta', models.DecimalField(decimal_places=2, max_digits=20, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))])),
                ('montoTotalOperacion', models.DecimalField(decimal_places=2, max_digits=20, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))])),
                ('totalNoGravado', models.DecimalField(decimal_places=2, max_digits=20)),
                ('totalPagar', models.DecimalField(decimal_places=2, max_digits=20, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))])),
                ('totalLetras', models.CharField(max_length=200)),
                ('totalIva', models.DecimalField(decimal_places=2, max_digits=20, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))])),
                ('saldoFavor', models.DecimalField(decimal_places=2, max_digits=20)),
                ('numPagoElectronico', models.CharField(blank=True, max_length=100, null=True)),
                ('condicionOperacion', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='dte.condicionoperacion')),
                ('factura', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='resumen', to='dte.facturaelectronica')),
            ],
            options={
                'verbose_name': 'Resumen',
                'verbose_name_plural': 'Resúmenes',
                'db_table': 'dte_resumen',
            },
        ),
        migrations.CreateModel(
            name='Pago',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('montoPago', models.DecimalField(decimal_places=2, max_digits=20, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))])),
                ('referencia', models.CharField(blank=True, max_length=50, null=True)),
                ('periodo', models.SmallIntegerField(blank=True, null=True)),
                ('codigo', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='dte.formapago')),
                ('plazo', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='dte.plazo')),
                ('resumen', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='pagos', to='dte.resumen')),
            ],
            options={
                'verbose_name': 'Pago',
                'verbose_name_plural': 'Pagos',
                'db_table': 'dte_pago',
            },
        ),
        migrations.CreateModel(
            name='DocumentoRelacionado',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('numeroDocumento', models.CharField(help_text='Si tipoGeneracion=2 debe ser UUID; si tipoGeneracion=1, 1–20 caracteres', max_length=36)),
                ('fechaEmision', models.DateField(verbose_name='Fecha de Emisión Relacionada')),
                ('factura', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='documentos_relacionados', to='dte.facturaelectronica')),
                ('tipoGeneracion', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='dte.generaciondocumento', verbose_name='Tipo de Generación')),
                ('tipoDocumento', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='dte.tipodocumento', verbose_name='Tipo de Documento Relacionado')),
            ],
            options={
                'verbose_name': 'Documento Relacionado',
                'verbose_name_plural': 'Documentos Relacionados',
                'db_table': 'dte_documento_relacionado',
            },
        ),
        migrations.AddField(
            model_name='emisor',
            name='tipoEstablecimiento',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='dte.tipoestablecimiento'),
        ),
        migrations.CreateModel(
            name='OtrosDocumentos',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('descDocumento', models.CharField(blank=True, max_length=100, null=True)),
                ('detalleDocumento', models.CharField(blank=True, max_length=300, null=True)),
                ('medico_nombre', models.CharField(blank=True, max_length=100, null=True)),
                ('medico_nit', models.CharField(blank=True, max_length=14, null=True, validators=[django.core.validators.RegexValidator(message='NIT debe tener 9 o 14 dígitos.', regex='^(\\d{9}|\\d{14})$')])),
                ('medico_docIdentificacion', models.CharField(blank=True, max_length=25, null=True)),
                ('codDocAsociado', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='dte.otrodocumentoasociado')),
                ('factura', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='otros_documentos', to='dte.facturaelectronica')),
                ('medico_tipoServicio', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='dte.tiposervicio')),
            ],
            options={
                'verbose_name': 'Otros Documentos',
                'verbose_name_plural': 'Otros Documentos',
                'db_table': 'dte_otros_documentos',
            },
        ),
        migrations.CreateModel(
            name='TributoResumen',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('descripcion', models.CharField(max_length=150)),
                ('valor', models.DecimalField(decimal_places=2, max_digits=20, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))])),
                ('codigo', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='dte.tributo')),
                ('resumen', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='tributos', to='dte.resumen')),
            ],
            options={
                'verbose_name': 'Tributo Resumen',
                'verbose_name_plural': 'Tributos Resumen',
                'db_table': 'dte_tributo_resumen',
            },
        ),
        migrations.CreateModel(
            name='CuerpoDocumentoItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('numItem', models.IntegerField(validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(2000)])),
                ('numeroDocumento', models.CharField(blank=True, max_length=36, null=True)),
                ('cantidad', models.DecimalField(decimal_places=2, max_digits=20, validators=[django.core.validators.MinValueValidator(Decimal('0.00')), django.core.validators.MaxValueValidator(Decimal('99999999999.99'))])),
                ('codigo', models.CharField(blank=True, max_length=25, null=True)),
                ('descripcion', models.CharField(max_length=1000)),
                ('precioUni', models.DecimalField(decimal_places=2, max_digits=20, validators=[django.core.validators.MinValueValidator(Decimal('0.00')), django.core.validators.MaxValueValidator(Decimal('99999999999.99'))])),
                ('montoDescu', models.DecimalField(decimal_places=2, max_digits=20, validators=[django.core.validators.MinValueValidator(Decimal('0.00')), django.core.validators.MaxValueValidator(Decimal('99999999999.99'))])),
                ('ventaNoSuj', models.DecimalField(decimal_places=2, max_digits=20, validators=[django.core.validators.MinValueValidator(Decimal('0.00')), django.core.validators.MaxValueValidator(Decimal('99999999999.99'))])),
                ('ventaExenta', models.DecimalField(decimal_places=2, max_digits=20, validators=[django.core.validators.MinValueValidator(Decimal('0.00')), django.core.validators.MaxValueValidator(Decimal('99999999999.99'))])),
                ('ventaGravada', models.DecimalField(decimal_places=2, max_digits=20, validators=[django.core.validators.MinValueValidator(Decimal('0.00')), django.core.validators.MaxValueValidator(Decimal('99999999999.99'))])),
                ('psv', models.DecimalField(decimal_places=2, max_digits=20, validators=[django.core.validators.MinValueValidator(Decimal('0.00')), django.core.validators.MaxValueValidator(Decimal('99999999999.99'))])),
                ('noGravado', models.DecimalField(decimal_places=2, max_digits=20, validators=[django.core.validators.MinValueValidator(Decimal('-99999999999.99')), django.core.validators.MaxValueValidator(Decimal('99999999999.99'))])),
                ('ivaItem', models.DecimalField(decimal_places=2, max_digits=20, validators=[django.core.validators.MinValueValidator(Decimal('0.00')), django.core.validators.MaxValueValidator(Decimal('99999999999.99'))])),
                ('factura', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='cuerpo_documento', to='dte.facturaelectronica')),
                ('tipoItem', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='dte.tipoitem', verbose_name='Tipo de Ítem')),
                ('codTributo', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='dte.tributo', verbose_name='Código de Tributo')),
                ('tributos', models.ManyToManyField(blank=True, related_name='items_cuerpo', to='dte.tributo')),
                ('uniMedida', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='dte.unidadmedida', verbose_name='Unidad de Medida')),
            ],
            options={
                'verbose_name': 'Cuerpo Documento Ítem',
                'verbose_name_plural': 'Cuerpo Documento Ítems',
                'db_table': 'dte_cuerpo_documento_item',
            },
        ),
        migrations.CreateModel(
            name='VentaTercero',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nit', models.CharField(max_length=14, validators=[django.core.validators.RegexValidator(message='NIT de tercero debe tener 9 o 14 dígitos.', regex='^(\\d{9}|\\d{14})$')])),
                ('nombre', models.CharField(max_length=250)),
                ('factura', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='venta_tercero', to='dte.facturaelectronica')),
            ],
            options={
                'verbose_name': 'Venta Tercero',
                'verbose_name_plural': 'Ventas Terceros',
                'db_table': 'dte_venta_tercero',
            },
        ),
    ]
